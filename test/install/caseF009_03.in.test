## - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
## 
## wdb - weather and water data storage
##
## Copyright (C) 2009 met.no
##
##  Contact information:
##  Norwegian Meteorological Institute
##  Box 43 Blindern
##  0313 OSLO
##  NORWAY
##  E-mail: wdb@met.no
##
##  This is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) any later version.
##
## - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Script Information
export TESTCASE="F009_03"
export TEST_DESCRIPTION="Handles different grid sizes (~1000x1000 grid)"
export TEST_PATH=__WDB_BUILDDIR__/test/install

# Test Environment
source $TEST_PATH/testEnvironment.sh

# Parse command line
case $1 in
    --help) 
    echo "$SCRIPT_USAGE"; exit 0;;
    --version) 
    echo "$0 $SCRIPT_VERSION"; exit 0;;
    --xml)
		XML_OPT="-x";;
    -x)
		XML_OPT="-x";;
esac

# Timing
startTime=`date +%s%N`
# Prepare Test
TESTTIME=$(date +%FT12:00)
EXECUTE="${GRIBLOAD_PATH}/gribLoad --name ${TEST_FILE}"
RESFILE="$TMP_PATH/case$TESTCASE.tmp"

# Clean out database
source ${TEST_PATH}/tearDown.sh

# Generate Test Data
rm -f ${TEST_FILE}
${GRIBWRITE_PATH}/gribWrite --proff --generatingCentre 1 --generatingProcess 252 --parameter 1 --timeValue ${TESTTIME} --timeUnit 1 --timeRangeIndicator 0 --levelValue 0 --levelUnit 102 ${TEST_FILE}

#Execute Test 
$EXECUTE --logfile $LOGFILE

# Check Log File
if grep -q -E "ERROR" $LOGFILE;
then
    # The log contains error messages
	endTime=`date +%s%N`
	totalTime=$(echo "scale = 3; ($endTime-$startTime)/1000000000" | bc -l)
	if test "$XML_OPT" = "-x"; then
    	echo -e "<testcase name=\"`basename $0` $TEST_DESCRIPTION\" time=\"$totalTime\">\n\t<failure message=\"There are error messages in the log\">\n\t</failure>\n</testcase>"
	else
    	echo -e "not ok $1 - `basename $0`\t$TEST_DESCRIPTION (log errors)"
	fi
    exit 1
fi
if grep -q -E "WARN" $LOGFILE;
then
    # The log contains warning messages
	endTime=`date +%s%N`
	totalTime=$(echo "scale = 3; ($endTime-$startTime)/1000000000" | bc -l)
	if test "$XML_OPT" = "-x"; then
    	echo -e "<testcase name=\"`basename $0` $TEST_DESCRIPTION\" time=\"$totalTime\">\n\t<failure message=\"There are warning messages in the log\">\n\t</failure>\n</testcase>"
	else
    	echo -e "not ok $1 - `basename $0`\t$TEST_DESCRIPTION (log warnings)"
	fi
    exit 1
fi


# Check Result
if ! $PSQL -q -Atc "select count(*) from test.gridvalue where placeid=1020" | grep -qE "^1$"
then
	endTime=`date +%s%N`
	totalTime=$(echo "scale = 3; ($endTime-$startTime)/1000000000" | bc -l)
	if test "$XML_OPT" = "-x"; then
    	echo -e "<testcase name=\"`basename $0` $TEST_DESCRIPTION\" time=\"$totalTime\">\n\t<failure message=\"An unexpected row was found in the database\">\n\t</failure>\n</testcase>"
	else
    	echo -e "not ok $1 - `basename $0`\t$TEST_DESCRIPTION"
	fi
    echo -e "not ok $1 - `basename $0`\t$TEST_DESCRIPTION"
    exit 1
fi



# Clean up
source ${TEST_PATH}/tearDown.sh

# Exit
endTime=`date +%s%N`
totalTime=$(echo "scale = 3; ($endTime-$startTime)/1000000000" | bc -l)
if test "$XML_OPT" = "-x"; then
	echo -e "<testcase name=\"`basename $0` $TEST_DESCRIPTION\" time=\"$totalTime\">\n</testcase>"
else
	echo -e "ok $1 - `basename $0`\t$TEST_DESCRIPTION"
fi
exit 0
